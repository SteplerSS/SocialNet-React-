{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Message","className","s","message","DialogItem","dialog","active","id","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","messages","dialogsItems","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"sNAIMA,EAA6B,SAACC,GAAD,MAAY,CAEvCC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,iLAInC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAG,eAJT,GAEXC,IAAML,WAatC,OAHqCM,YAAQX,EAARW,CAAqCL,K,oBCrB9EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,8ECOpMC,EALC,SAACN,GACb,OACI,yBAAKO,UAAWC,IAAEC,SAAUT,EAAMS,U,QCM3BC,EAPI,SAACV,GAChB,OACI,yBAAKO,UAAWC,IAAEG,OAAS,IAAMH,IAAEI,QAC/B,kBAAC,IAAD,CAASX,GAAI,YAAcD,EAAMa,IAAKb,EAAMc,Q,0CCiCpDC,EAAcC,YAAiB,IAgB7BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAdL,SAAClB,GACpB,OACI,0BAAMoB,SAAUpB,EAAMqB,cAElB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACdC,SAAU,CAACC,IAAUX,GACrBD,KAAK,iBAAiBa,YAAY,uBAEtC,6BAAK,qDAQFC,EA/CC,SAAC5B,GAEb,IAAIP,EAAQO,EAAM6B,YAEdC,EAAkBrC,EAAMsC,QAAQC,KAAI,SAAArB,GAAM,OAAI,kBAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMD,GAAIF,EAAOE,QACxFJ,EAAUhB,EAAMwC,SAASD,KAAI,SAAAvB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,aAStE,OAAKT,EAAMN,OAGP,yBAAKa,UAAWC,IAAEuB,SACd,yBAAKxB,UAAWC,IAAE0B,cACbJ,GAEL,yBAAKvB,UAAWC,IAAEyB,UACd,6BAAMxB,GACN,kBAACQ,EAAD,CAAqBG,SAfb,SAACe,GAEjBnC,EAAMoC,YAAYD,EAAOE,qBAIH,kBAAC,IAAD,CAAUpC,GAAG,Y,iCCC5BqC,sBACXnC,aAlBkB,SAACV,GACnB,MAAO,CACHoC,YAAapC,EAAMoC,gBAIF,SAACU,GACtB,MAAO,CAEHH,YAAa,SAACC,GACVE,EAASC,YAAmBH,SASpCzC,IAFW0C,CAGbV","file":"static/js/4.13da6f7c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n  let mapStateToPropsForRedirect = (state) => ({\r\n    \r\n        isAuth: state.auth.isAuth,\r\n    });\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n\r\n    }\r\n  \r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect )(RedirectComponent)\r\n    \r\n\r\n    return ConnectedAuthRedirectComponent;\r\n} ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3oBg_\",\"dialogsItems\":\"Dialogs_dialogsItems__25pxs\",\"active\":\"Dialogs_active__3A1uO\",\"dialog\":\"Dialogs_dialog__1_4rQ\",\"messages\":\"Dialogs_messages__1swtA\",\"message\":\"Dialogs_message__13n9o\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n};\r\nexport default Message;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"./../../components/common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\r\n    let message = state.messages.map(message => <Message message={message.message} />)\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n\r\n        props.sendMessage(values.newMessageBody)\r\n\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{message}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <Field component={Textarea}\r\n                validate={[required, maxLength50]}\r\n                name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n\r\n            <div><button>send message</button></div>\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n","\r\nimport Dialogs from \"./Dialogs\"\r\nimport { sendMessageCreator } from '../../Redux/dialogs-reducer'\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n"],"sourceRoot":""}